 type Cliente { 
        id: ID
        nombre: String
        apellidos: String
        empresa: String
        emails: [Email]
        edad: Int
        tipo: TipoCliente
    }

    type Email { 
        email: String
    }

    type Pedido {
        id: ID
        pedido: [PedidoProducto]
        total: Int
        fecha: String
        cliente: ID
        estado: EstadoPedido
    }
    
    type PedidoProducto {
        id: ID
        cantidad: Int
    }

    type Producto { 
        id: ID
        nombre: String!
        precio: Int!
        stock: Int!
    }

    type ClientesTotal { 
        total: Float
        cliente: [Cliente]
    }

    enum EstadoPedido { 
        PENDIENTE
        COMPLETADO
        CANCELADO
    }

    enum TipoCliente {
        BASICO
        PREMIUM
    }
    #para realizar comentarios,
    # obtener cliente y clientes  y la paginacion por medio del offset
    type Query {
        getClientes(limite: Int, offset: Int): [Cliente]
        getCliente(id: ID) : Cliente
        totalClientes: String
        obtainProducts(limite: Int, offset: Int, stock: Boolean) : [Producto]
        getProduct(id: ID) : Producto
        totalProducts: String
        #Pedidos
        obtenerPedidos(cliente: ID) : [Pedido]
        #ToClientes
        topClientes: [ClientesTotal]

    }
    
    input EmailInput { 
        email: String
    }

    input ClienteInput {
        id: ID
        nombre: String!
        apellidos: String!
        empresa: String!
        emails: [EmailInput]
        edad: Int!
        tipo: TipoCliente!
        pedidos: [PedidoInput]
    }

    input ProductoInput {
        id: ID
        nombre: String!
        precio: Int!
        stock: Int!
    }

    input PedidoInput {
        id: ID
        pedido: [PedidoProductoInput]
        total: Int
        fecha: String
        cliente: ID
        estado: EstadoPedido
    }
    
    input PedidoProductoInput {
        id: ID
        cantidad: Int
    }

    type Mutation { 
        """ Permite la creacion de nuevos clientes (desscripccion) """
        crearCliente(input: ClienteInput) : Cliente
        actualizarCliente(input: ClienteInput) : Cliente
        eliminarCliente(id: ID!) : String
        ### seccion de productos
        nuevoProducto(input: ProductoInput) : Producto
        updateProduct(input: ProductoInput) : Producto
        deleteProduct(id: ID!) : String
        ### seccion de pedidos 
        nuevoPedido(input: PedidoInput) : Pedido
        actualizarEstado(input: PedidoInput) : String
    }